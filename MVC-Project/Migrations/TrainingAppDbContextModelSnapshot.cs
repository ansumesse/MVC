// <auto-generated />
using System;
using MVC_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Project.Migrations
{
    [DbContext(typeof(TrainingAppDbContext))]
    partial class TrainingAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Project.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int?>("Dep_ID")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Dep_ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MVC_Project.Models.CrsResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Crs_ID")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int?>("Trainee_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Crs_ID");

                    b.HasIndex("Trainee_ID");

                    b.ToTable("CrsResults");
                });

            modelBuilder.Entity("MVC_Project.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MangerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVC_Project.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Crs_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Dep_ID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("Crs_ID");

                    b.HasIndex("Dep_ID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("MVC_Project.Models.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int?>("Dep_ID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Dep_ID");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("MVC_Project.Models.Course", b =>
                {
                    b.HasOne("MVC_Project.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("Dep_ID");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Project.Models.CrsResult", b =>
                {
                    b.HasOne("MVC_Project.Models.Course", "Course")
                        .WithMany("CrsResults")
                        .HasForeignKey("Crs_ID");

                    b.HasOne("MVC_Project.Models.Trainee", "Trainee")
                        .WithMany("CrsResults")
                        .HasForeignKey("Trainee_ID");

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("MVC_Project.Models.Instructor", b =>
                {
                    b.HasOne("MVC_Project.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("Crs_ID");

                    b.HasOne("MVC_Project.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("Dep_ID");

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Project.Models.Trainee", b =>
                {
                    b.HasOne("MVC_Project.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("Dep_ID");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Project.Models.Course", b =>
                {
                    b.Navigation("CrsResults");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("MVC_Project.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("MVC_Project.Models.Trainee", b =>
                {
                    b.Navigation("CrsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
